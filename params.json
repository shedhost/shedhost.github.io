{
  "name": "Shed",
  "tagline": "simple local PHP development",
  "body": "Introduction\r\n------------\r\n\r\nShed provides a platform for simple, local, PHP development, in the same kind of way MAMP, Laravel Valet, or Homestead does.\r\n\r\n* Shed uses Docker, and runs on **every platform** Docker does.\r\n* Shed treats **folders as sites**, so adding a site is just making a folder.\r\n* Shed makes use of **wildcard DNS**, so **no configuration** is required to add sites to Shed.\r\n* Shed runs real Linux, Apache, MySQL, PostgreSQL and PHP, so your local environment matches production.\r\n\r\nIt's designed to provide a set-it-and-forget-it platform for local, PHP development.\r\n\r\n**Please note,** Shed is still very much a work in progress, and while you may find it useful, anything undocumented is particularly prone to change.\r\n\r\n\r\nSetup\r\n-----\r\n\r\nTo run Shed, you only need to be able to run [Docker](https://www.docker.com/).\r\n\r\n\r\n### Default Enviroment\r\n\r\nBy default, Shed assumes the following setup:\r\n\r\n* You have all your projects in one main folder: `Projects/` or `Sites/` perhaps.\r\n* Shed itself is inside that folder.\r\n* Shed should use the default HTTP port, port 80.\r\n* Within each project folder, Shed looks for a `public/` subfolder and uses that as the document root.\r\n\r\nIf that's how you plan to use Shed, great. If not, you'll want to look in the\r\n`docker-compose.yml` and make some adjustements.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nStart Shed by running `./shed up`. Once it's running, you can access your\r\nprojects based on their folder names. For example, To access\r\n`Projects/example.com`, I would go to\r\n\r\n* <http://example.com.shed.host>\r\n\r\nThat's it. If you don't want to use shed.host, you can use any of the following:\r\n\r\n* imarc.io - owned by [Imarc](https://www.imarc.com)\r\n* localtest.me - [readme.localtest.me](http://readme.localtest.me/)\r\n* lvh.me - owned by [Levi Cook](https://gist.github.com/levicook/563675)\r\n* 42foo.com - owned by [Jorge Bernal](https://jorgebernal.info/2009/07/17/42foo-virtual-hosts-web-development/)\r\n* fuf.me - owned by [fidian](http://www.fidian.com/programming/public-dns-pointing-to-localhost)\r\n* lacolhost.com - owned by [Reenhanced](http://blog.reenhanced.com/post/29566591244/developing-with-subdomains-just-got-a-lot-easier)\r\n* vcap.me - part of [Cloud Foundry](https://github.com/cloudfoundry-attic/vcap)\r\n\r\n**Shed assumes** that the document root for all your projects is\r\n`<projectfolder>/public`. If you use `docroot/` instead, you can try creating a\r\nsymlink like this:\r\n\r\n```\r\n$ ln -s public docroot\r\n```\r\n\r\n\r\n### How this works\r\n\r\n\\*.shed.host is setup using wildcard DNS to point to `127.0.0.1` - one of the IPs designed to always point to your own local system (*localhost*.) This eliminates any need to etc your `/etc/hosts` file.\r\n\r\nWithin Shed's apache container, it uses `mod_vhost_alias` to map these subdomains back to separate virtualhosts. This means that there's no new apache configuration required.\r\n\r\n\r\nAdminer\r\n-------\r\n\r\n[Adminer](https://www.adminer.org/) is a lightweight webapp for managing databases, including both MySQL and PostgreSQL. The latest release of Adminer is included in Shed.\r\n\r\nYou can login by going to <http://my.shed.host/> and clicking the relevant link, or:\r\n\r\n* **MySQL:** host is `mysql`, username is `root`, no password\r\n* **PostgresSQL:** host is `postgres`, username is `postgres`, no password\r\n\r\n\r\nXDebug and Webgrind\r\n-------------------\r\n\r\nXDebug and Webgrind are setup within Shed as well. You can trigger XDebug\r\nprofiling by adding `?XDEBUG_PROFILE=1` to the end of a URL.\r\n\r\nYou can view That profile with Webgrind by going to\r\n\r\n* <http://my.shed.host/webgrind/>\r\n\r\n\r\nPlanned Features\r\n----------------\r\n\r\n+ nice landing page and skin for my.shed.host\r\n+ composer-based command-line tool\r\n+ documentation and examples of use with Craft CMS, Laravel, and WordPress",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}